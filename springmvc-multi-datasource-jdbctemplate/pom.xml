<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.fmz.learn.springmvc</groupId>
  <artifactId>springmvc-multi-datasource-jdbctemplate</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>springmvc-multi-datasource-jdbctemplate Maven Webapp</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
  </properties>

  <dependencies>
    <!-- servlet -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.0.1</version>
    </dependency>

    <!-- 无需显式引用spring web依赖 -->
    <!-- spring-mvc -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>4.2.4.RELEASE</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>4.2.4.RELEASE</version>
    </dependency>

    <!-- 使用log4j最为日志输出 -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>

    <!-- MySQL数据库驱动 -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>8.0.16</version>
    </dependency>

    <!-- 数据源 -->
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>1.4</version>
    </dependency>

    <!-- Spring & Mybatis -->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>3.4.6</version>
    </dependency>
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
      <version>1.3.2</version>
    </dependency>

    <!-- Gson for GsonHttpMessageConverter -->
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.5</version>
    </dependency>

    <dependency>
      <groupId>postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>9.1-901-1.jdbc4</version>
    </dependency>
  </dependencies>

  <build>
    <!-- 覆写maven的默认设置以便源文件中的mapper文件可以被打包 -->
    <!-- 打包时的文件名 -->
    <finalName>springmvc-mybatis</finalName>
    <!-- 自定义的一个占位符,用project.build.directory引用 -->
    <directory>${project.basedir}/target</directory>
    <!-- 源码位置,相当于在IDE中mark as source root -->
    <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
    <!-- 输出编译文件位置 -->
    <outputDirectory>${project.build.directory}/classes</outputDirectory>
    <!-- 配置文件位置,指定这个位置在打包时会从这里copy配置文件 -->
    <!-- 如果覆写了super pom中的某个节点,需要补全整个节点的内容
         下面配置为了能够打包源文件中的xml文件,
         必须重新添加下src/main/resources为resources路径 -->
    <resources>
      <resource>
        <filtering>false</filtering>
        <directory>${project.basedir}/src/main/java</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
      <!-- 这个几点的添加是必要的 -->
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
      </resource>
    </resources>
  </build>
</project>
